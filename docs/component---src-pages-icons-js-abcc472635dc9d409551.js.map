{"version":3,"sources":["webpack:///./src/components/Icon.js","webpack:///./src/pages/icons.js"],"names":["Icon","props","className","style","width","height","alt","src","withPrefix","path","name","toLowerCase","Icons","filterIcons","term","data","allFile","edges","state","icons","componentDidMount","this","setState","render","title","type","placeholder","map","icon","index","node","relativePath","relativeDirectory","flex","React","Component"],"mappings":"8QAsBeA,EAhBF,SAACC,GACV,OACI,oCACI,yBAAKC,UAAU,wCAAwCC,MAAO,CAACC,MAAO,IAAKC,OAAQ,MAC/E,yBAAKC,IAAI,OAAOJ,UAAU,4BAA4BK,IAAKC,qBAAW,KAAO,SAAWP,EAAMQ,KAAMN,MAAO,CAACC,MAAO,GAAIC,OAAQ,UAC/H,yBAAKH,UAAU,qDAAqDD,EAAMS,KAAKC,kBCH1EC,E,YACnB,WAAYX,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAaFY,YAAc,SAACC,GACb,IAAIA,EACF,OAAO,EAAKb,MAAMc,KAAKC,QAAQC,OAbjC,EAAKC,MAAQ,CACXC,MAAO,MAJQ,E,4CAQnBC,kBAAA,WACEC,KAAKC,SAAS,CACZH,MAAOE,KAAKR,iB,EAUhBU,OAAA,WAAU,IAAD,EACP,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,UACX,yBAAKtB,UAAU,aACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,4BACZ,kBAAC,IAAD,CAAaA,UAAU,SADzB,YAGE,0BAAMA,UAAU,qCACd,2BAAOuB,KAAK,OAAOvB,UAAU,eAAewB,YAAY,kBAG5D,yBAAKxB,UAAU,kDAAf,UACGmB,KAAKH,MAAMC,aADd,aACG,EAAkBQ,KAAI,SAACC,EAAMC,GAC5B,OACI,kBAAC,EAAD,CAAMpB,KAAMmB,EAAKE,KAAKC,aAAcrB,KAAMkB,EAAKE,KAAKE,uBAG1D,yBAAK9B,UAAU,MAAMC,MAAO,CAAC8B,KAAM,e,GAxCdC,IAAMC,WAiD5BpB,EAAI","file":"component---src-pages-icons-js-abcc472635dc9d409551.js","sourcesContent":["import React from \"react\";\r\nimport propTypes, {string} from \"prop-types\"\r\nimport { withPrefix } from 'gatsby'\r\nimport PropTypes from \"prop-types\";\r\nimport Layout from \"./layout\";\r\n\r\nconst Icon = (props) => {\r\n    return(\r\n        <>\r\n            <div className=\"m-2 border rounded d-flex flex-column\" style={{width: 100, height: 100}}>\r\n                <img alt=\"icon\" className=\"mt-auto align-self-center\" src={withPrefix(\"/\") + \"icons/\" + props.path} style={{width: 32, height: 'auto'}} />\r\n                <div className=\"border-top font-size-sm w-100 text-center mt-auto\">{props.name.toLowerCase()}</div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nIcon.propTypes = {\r\n    path: propTypes.string.isRequired,\r\n    name: propTypes.string.isRequired\r\n}\r\n\r\nexport default Icon;","import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport PictureIcon from \"../styles/img/svg/picture.svg\"\r\nimport { useStaticQuery, graphql, withPrefix } from \"gatsby\";\r\nimport SEO from \"../components/seo\"\r\n\r\nimport Icon from \"../components/Icon\";\r\n\r\nexport default class Icons extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      icons: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      icons: this.filterIcons()\r\n    })\r\n  }\r\n\r\n  filterIcons = (term) => {\r\n    if(!term){\r\n      return this.props.data.allFile.edges;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Layout>\r\n        <SEO title=\"Icons\" />\r\n        <div className=\"container\">\r\n          <div className=\"island px-4 py-3 mb-3\">\r\n            <h2 className=\"flex-wrap flex-md-nowrap\">\r\n              <PictureIcon className=\"mr-2\" />\r\n              Icons Set\r\n              <span className=\"ml-md-auto col-lg-5 col-md-6 px-0\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Search icon\" />\r\n              </span>\r\n            </h2>\r\n            <div className=\"d-flex flex-wrap mx-n2 justify-content-between\">\r\n              {this.state.icons?.map((icon, index) => {\r\n                return (\r\n                    <Icon path={icon.node.relativePath} name={icon.node.relativeDirectory} />\r\n                )\r\n              })}\r\n              <div className=\"m-2\" style={{flex: 'auto'}}></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport const data = graphql`\r\n  query IconsQuery {\r\n    allFile(filter: {sourceInstanceName: {eq: \"icons\"}, name: {ne: \"bold\"}}) {\r\n      edges {\r\n        node {\r\n          relativePath\r\n          relativeDirectory\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}